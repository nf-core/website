---
import EventBannerItem from "@components/event/EventBannerItem.astro";
import type { CollectionEntry } from "astro:content";

interface Props {
    events: CollectionEntry<"events">[];
    eventTypeClasses: Record<string, string>;
    eventTypeIcons: Record<string, string>;
    formatDuration: (event: CollectionEntry<"events">) => string;
    heading: string;
    icon: string;
    isUpcoming?: boolean;
}

const { events, eventTypeClasses, eventTypeIcons, formatDuration, heading, icon, isUpcoming = false } = Astro.props;
---

<div>
    <div>
        {/* Desktop view */}
        <div class="d-none d-lg-flex">
            <div class="col-lg-4 overflow-hidden ps-3 position-relative d-flex flex-column justify-content-center">
                <h4 class="display-4 p-2 pb-0 mb-0 flex-grow-1" data-event-heading>
                    {heading}
                </h4>
                <i
                    class={`fad ${icon} homepage-header-fa-background position-absolute mt-5 ms-1 ms-xl-5`}
                    aria-hidden="true"></i>
            </div>
            <div class="flex-grow-1">
                {
                    events.map((event) => (
                        <EventBannerItem
                            event={event}
                            eventTypeClasses={eventTypeClasses}
                            eventTypeIcons={eventTypeIcons}
                            formattedDuration={formatDuration(event)}
                            isUpcoming={isUpcoming}
                            isMobile={false}
                        />
                    ))
                }
            </div>
        </div>

        {/* Mobile view */}
        <div class="d-lg-none">
            <div class="py-0 mb-2 overflow-hidden mainpage-subheader-heading-header bg-body-tertiary">
                <h5 class="pt-2 font-weight-light text-center text-success" data-event-heading>
                    {heading}
                </h5>
            </div>
            {
                events.map((event) => (
                    <EventBannerItem
                        event={event}
                        eventTypeClasses={eventTypeClasses}
                        eventTypeIcons={eventTypeIcons}
                        formattedDuration={formatDuration(event)}
                        isUpcoming={isUpcoming}
                        isMobile={true}
                    />
                ))
            }
        </div>
    </div>
</div>

<style lang="scss">
    @import "@styles/_variables.scss";

    :global(.homepage-header-fa-background) {
        font-size: 14em;
        opacity: 0.2;
    }

    @include media-breakpoint-down(md) {
        .mainpage-subheader-heading {
            padding-top: 2rem;
        }
    }
</style>
