---
import InstallCmd from "@components/InstallCmd.svelte";
import SidebarStatsRow from "@components/sidebar/SidebarStatsRow.astro";
import { formatDistance } from "date-fns";
import GitHubProfilePicture from "@components/GitHubProfilePicture.svelte";
import { getCollection } from "astro:content";
import { YouTube } from "@astro-community/astro-embed-youtube";

const { meta, pipeline, version } = Astro.props;
export interface Props {
    meta: {
        contributors: {
            name: string;
            count: number;
            avatar_url?: string;
        }[];
        open_issues_count: number;
        open_pr_count: number;
        releases: {
            published_at: string;
        }[];
        stargazers_count: number;
        subscribers_count: number;
        updated_at: string;
    };
    pipeline: string;
    version: string;
}
const events = await getCollection("events", ({ data }) => data.embedAt === pipeline);
const event = events[0];

// Get YouTube video URL from event data
let videoUrl: string | undefined = undefined;
if (event) {
    // Check if the event has a youtubeEmbed property
    if (event.data.youtubeEmbed) {
        videoUrl = Array.isArray(event.data.youtubeEmbed) ? event.data.youtubeEmbed[0] : event.data.youtubeEmbed;
    }
}

// Extract YouTube video ID
const videoId = videoUrl
    ? videoUrl
          .replace("https://www.youtube.com/watch?v=", "")
          .replace("https://youtu.be/", "")
          .replace("https://youtube.com/watch?v=", "")
    : "";
console.log(event);
---

<div class="sidebar mt-3 sticky-top-under">
    <SidebarStatsRow content={[{ title: "run with", icon: "fa-regular fa-terminal" }]}>
        <div class="border rounded-1 mb-1">
            <div class="tab-content flex-column">
                <div
                    class="tab-pane show active"
                    id="nf-core-tab-pane"
                    role="tabpanel"
                    aria-labelledby="nf-core-tab"
                    tabindex="0"
                >
                    <InstallCmd
                        flatBottom={true}
                        client:idle
                        icon={false}
                        cmd={`nf-core pipelines launch nf-core/${pipeline} -r ${version}`}
                    />
                </div>
                <div
                    class="tab-pane"
                    id="nextflow-tab-pane"
                    role="tabpanel"
                    aria-labelledby="nextflow-tab"
                    tabindex="0"
                >
                    <InstallCmd
                        flatBottom={true}
                        client:visible
                        icon={false}
                        cmd={`nextflow run nf-core/${pipeline} -r ${version} -profile test --outdir <OUTDIR>`}
                    />
                </div>
                <div class="tab-pane" id="tower-tab-pane" role="tabpanel" aria-labelledby="tower-tab" tabindex="0">
                    <InstallCmd
                        flatBottom={true}
                        client:visible
                        icon={false}
                        cmd={`tw launch https://github.com/nf-core/${pipeline} -r ${version}`}
                    />
                    <span class="text-body-secondary small py-1 px-2 d-inline-block"
                        >See the <a href="https://github.com/seqeralabs/tower-cli/#2-configuration" target="_blank"
                            >docs</a
                        >
                        on how to configure the Seqera Platform CLI.</span
                    >
                </div>
            </div>
            <ul class="nav flex-column flex-xl-row nav-fill small border-top" role="tablist">
                <li class="nav-item" role="presentation">
                    <a
                        class="nav-link btn btn-sm btn-outline-secondary active rounded-0"
                        id="nf-core-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#nf-core-tab-pane"
                        type="button"
                        role="tab"
                        aria-controls="nf-core-tab-pane"
                        aria-selected="true">nf-core</a
                    >
                </li>
                <li class="nav-item" role="presentation">
                    <a
                        class="nav-link btn btn-sm btn-outline-secondary rounded-0"
                        id="nextflow-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#nextflow-tab-pane"
                        type="button"
                        role="tab"
                        aria-controls="nextflow-tab-pane"
                        aria-selected="false">Nextflow</a
                    >
                </li>
                <li class="nav-item" role="presentation">
                    <a
                        class="nav-link btn btn-sm btn-outline-secondary rounded-0"
                        id="tower-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#tower-tab-pane"
                        type="button"
                        role="tab"
                        aria-controls="tower-tab-pane"
                        aria-selected="false">Seqera Platform</a
                    >
                </li>
            </ul>
        </div>
    </SidebarStatsRow>
    {
        videoId && (
            <SidebarStatsRow content={[{ title: "video introduction", icon: "fa-brands fa-youtube" }]}>
                <YouTube id={videoId} poster={`https://i.ytimg.com/vi/${videoId}/hqdefault.jpg`} />
            </SidebarStatsRow>
        )
    }
    <SidebarStatsRow
        content={[
            { title: "subscribers", value: meta.subscribers_count },
            { title: "stars", value: meta.stargazers_count },
        ]}
    />
    <SidebarStatsRow
        content={[
            { title: "open issues", value: meta.open_issues_count },
            { title: "open PRs", value: meta.open_pr_count },
        ]}
    />
    <SidebarStatsRow
        content={[
            {
                title: "last release",
                value:
                    meta.releases.length > 1
                        ? formatDistance(new Date(meta.releases[0].published_at), new Date(), {
                              addSuffix: true,
                          })
                        : "not yet released",
            },
            {
                title: "last update",
                value: formatDistance(new Date(meta.releases[0].published_at), new Date(), { addSuffix: true }),
            },
        ]}
    />
    <SidebarStatsRow content={[{ title: "get help" }]}>
        <div class="d-flex flex-column">
            <a class="btn btn-outline-info mb-2" href={"https://nfcore.slack.com/channels/" + pipeline}
                ><i class="fab fa-slack me-1"></i> Ask a question on Slack</a
            >
            <a class="btn btn-outline-secondary" href={"https://github.com/nf-core/" + pipeline + "/issues"}
                ><i class="fab fa-github me-1"></i> Open an issue on GitHub</a
            >
        </div>
    </SidebarStatsRow>
    <SidebarStatsRow content={[{ title: "contributors" }]} lastChild={true}>
        {
            (
                <div class="d-flex flex-wrap justify">
                    {meta.contributors.map((contributor) => {
                        return (
                            <GitHubProfilePicture
                                name={contributor.name}
                                image={contributor.avatar_url}
                                size={50}
                                count={contributor.count}
                                imgClasses="mb-2 me-2"
                            />
                        );
                    })}
                </div>
            )
        }
    </SidebarStatsRow>
    <style lang="scss">
        @import "@styles/_variables.scss";
        .sidebar {
            max-height: calc(100vh - 5rem);
            overflow-y: auto;
        }
        .tab-content.border {
            margin-top: -1px;
        }
        .btn.nav-link {
            &.active,
            &:hover {
                color: $body-color;
                background-color: $border-color !important;
            }
        }

        :global([data-bs-theme="dark"]) {
            .border-secondary {
                border-color: $gray-700 !important;
            }
            .btn.nav-link {
                &.active,
                &:hover {
                    color: $body-color-dark;
                    background-color: $border-color-dark !important;
                }
            }
        }
    </style>
</div>
