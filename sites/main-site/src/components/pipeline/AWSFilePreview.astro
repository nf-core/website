---
import * as icons from "file-icons-js";
import "file-icons-js/css/style.css";
// import { Code } from 'astro/components';
import { Markdown } from "@astropub/md";
import Admonition from "@components/Admonition.astro";
import AWSExportButtons from "@components/pipeline/AWSExportButtons.astro";

const hrefPrefix = "https://nf-core-awsmegatests.s3-eu-west-1.amazonaws.com/";

const { file } = Astro.props;

let content = "";
const extension: string = file.name.split(".").pop();
const fileIcon = icons.getClass(file.name);
const hasPreview = [
    "json",
    "yaml",
    "yml",
    "csv",
    "tsv",
    "log",
    "txt",
    "html",
    "pdf",
    "png",
    "jpg",
    "jpeg",
    "gif",
    "svg",
    "config",
    "nf",
    "bed",
].includes(extension);
let tooBig = file.size > 5500000;
if (["csv", "tsv", "log", "txt"].includes(extension)) {
    tooBig = file.size > 1000;
}
if (!tooBig && hasPreview) {
    content = await fetch(hrefPrefix + file.path).then((r) => r.text());
}
---

<script>
    //scroll to file-preview
    window.addEventListener("load", () => {
        const filePreview = document.getElementById("file-preview");
        if (filePreview) {
            filePreview.scrollIntoView();
        }
    });
</script>
<div id="file-preview" class="card mt-3">
    <div class="card-header d-flex flex-column flex-lg-row align-items-center">
        <span class="fs-bold d-flex align-items-center">
            {fileIcon ? <span class={fileIcon + " file-icon me-2"} /> : <i class="fa-solid fa-file me-2" />}
            {file.name}
        </span>
        <div class="ms-auto">
            <AWSExportButtons href={hrefPrefix + file.path} />
        </div>
    </div>
    <div class:list={["card-body  p-0", { "d-none": !hasPreview || tooBig }]}>
        {
            ["bam", "bai", "gz", "zip"].includes(extension) && (
                <Admonition title="warning">
                    <p>This file is compressed and cannot be previewed. You can download it and view it locally.</p>
                </Admonition>
            )
        }
        {
            extension === "html" && (
                <div class="iframe-container w-100 d-flex align-items-start">
                    <i class="mt-5 m-auto text-success fa-regular fa-spinner-third fa-spin fa-3x" />
                    <iframe
                        class="d-none"
                        srcdoc={content}
                        onload="this.classList.remove('d-none'); this.previousElementSibling.classList.add('d-none');"
                        title={file.name}
                        style="border:none;"
                        width="100%"
                        height="1000px"
                    />
                </div>
            )
        }
        {
            ["png", "jpg", "jpeg", "gif", "svg"].includes(extension) && (
                <div class="img-wrapper w-100">
                    <img src={hrefPrefix + file.path} class="img-fluid" />
                </div>
            )
        }
        {
            ["json", "yaml", "yml"].includes(extension) && (
                // <Code lang={extension} code={content} />
                <Markdown of={"``` " + extension + "\n" + content + "\n" + "```"} />
            )
        }
        {
            ["log", "txt", "csv", "tsv", "bed"].includes(extension) && (
                <Markdown of={"``` " + extension + "\n" + content + "\n" + "```"} />
            )
        }
        {["config", "nf"].includes(extension) && <Markdown of={"``` groovy" + "\n" + content + "\n" + "```"} />}
        {
            extension === "pdf" && (
                <object data={hrefPrefix + file.path} type="application/pdf" width="100%" height="1000px">
                    <p>
                        You don't have a PDF plugin, but you can
                        <a href="hrefPrefix + file.path">download the PDF file. </a>
                    </p>
                </object>
            )
        }
    </div>
    <div class:list={["p-3 mt-4", { "d-none": hasPreview }]}>
        <Admonition title="note">
            <p>No preview available for this file type. You can download it and view it locally.</p>
        </Admonition>
    </div>
    <div class:list={["p-3 ", { "d-none": !tooBig || !hasPreview }]}>
        <Admonition title="info">
            <p>The file is too big to preview, please download it to inspect its contents.</p>
        </Admonition>
    </div>
</div>
<style lang="scss">
    @import "@styles/_variables.scss";

    .file-icon {
        vertical-align: middle;
    }
    .card-body {
        & > div,
        & > pre {
            padding-left: 1rem;
            padding-right: 1rem;
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
        }
        & .img-wrapper {
            background-color: $white;
        }
        & :global(figure[data-rehype-pretty-code-figure]) {
            margin-bottom: 0;
            & :global(pre) {
                margin-bottom: 0;
            }
        }
    }
</style>
