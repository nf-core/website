---
// Heavily inspired by Astro Starlight

import { type SidebarEntry } from "@utils/types";
import { sanitizeNfCoreLabels } from "@utils/functions";

import { Icon } from "astro-icon/components";

export interface Props {
    items: SidebarEntry[];
    nested?: boolean;
}

let { items, nested = false } = Astro.props;
if (!items) {
    items = [];
}

const flattenSidebar = (sidebar: SidebarEntry[]): SidebarEntry[] => {
    if (!sidebar) {
        return [];
    }
    return sidebar.flatMap((entry) =>
        entry.type === "group" && entry.entries ? flattenSidebar(entry.entries) : entry,
    );
};
---

<script is:inline>
    // scroll to the active item
    if (typeof window !== "undefined") {
        const activeItem = document.querySelector('a[aria-current="page"]');
        if (activeItem) {
            activeItem.scrollIntoView({ block: "center" });
        }
    }
</script>
<ul class:list={[{ "top-level": !nested }, "w-100"]}>
    {
        items.map((item) => {
            const containsCurrent =
                item.type === "group" &&
                (flattenSidebar(item.entries).some((i) => i.isCurrent) || item.entries.some((i) => i.isCurrent));
            return (
                <li>
                    {item.type === "link" ? (
                        <a
                            href={item.href}
                            aria-current={item.isCurrent && "page"}
                            class:list={["px-2"]}
                            data-weight={item.weight}
                        >
                            <span class="section-link" set:html={sanitizeNfCoreLabels(item.label)} />
                        </a>
                    ) : (
                        <details open={containsCurrent || item.isCurrent || !item.collapsed}>
                            <summary aria-current={item.isCurrent && "page"}>
                                <div class:list={[{ h6: !nested }, "group-label flex-grow-1"]}>
                                    <span
                                        class="group-header d-flex align-items-start"
                                        data-weight={item.weight}
                                        set:html={sanitizeNfCoreLabels(item.label)}
                                    >
                                        {item.icon &&
                                            (item.icon.includes(":") ? (
                                                <Icon name={item.icon} class="me-2 fs-5" is:inline />
                                            ) : (
                                                <i class={`me-2 fa-fw mt-1 ${item.icon} text-reset`} />
                                            ))}
                                    </span>
                                </div>
                                <div class="hover-target">
                                    <i class:list={["fa-solid fa-chevron-right fa-xs mx-3 h-100 caret"]} />
                                </div>
                            </summary>
                            <Astro.self items={item.entries} nested={true} />
                        </details>
                    )}
                </li>
            );
        })
    }
</ul>
<style lang="scss">
    @import "@styles/_variables.scss";

    ul {
        --sl-sidebar-item-margin-inline: 9pt;
        --sl-sidebar-item-padding-inline: 0.8rem;
        list-style: none;
        padding: 0;
    }
    li {
        overflow-wrap: anywhere;
        font-size: 1rem;
        a:not(.group-header) {
            display: block;
            text-decoration: none;
            color: var(--bs-body-color);
            padding: 0.3em var(--sl-sidebar-item-padding-inline);
            border-inline-end: 2pt solid var(--bs-border-color);
            line-height: 1.4;
            &:hover {
                background-color: transparentize($success, 0.85);
            }
        }
        & summary[aria-current="page"] .group-label a:hover {
            color: var(--bs-body-color);
            background-color: transparentize($success, 1);
        }
        .section-link {
            color: var(--bs-secondary-color);
        }
        a,
        summary {
            &[aria-current="page"],
            &[aria-current="page"]:hover,
            &[aria-current="page"]:focus {
                color: var(--bs-body-color);
                background-color: transparentize($success, 0.75);
                border-inline-end: 2pt solid var(--bs-success);
                .section-link {
                    color: var(--bs-secondary-color);
                }
            }
        }
    }

    ul ul li {
        margin-inline-start: var(--sl-sidebar-item-margin-inline);
        border-inline-start: 1pt solid var(--bs-border-color);
        padding-inline-start: var(--sl-sidebar-item-padding-inline);
    }

    summary {
        display: flex;
        align-items: center;
        justify-content: space-between;
        cursor: pointer;
        user-select: none;
        border-inline-end: 2pt solid var(--bs-border-color);
        a,
        span {
            text-decoration: none;
            padding: 0.3em 0.5rem;
            margin-bottom: 0;
            color: var(--bs-body-color);
            font-family: $font-family-sans-serif;
        }

        svg[data-icon],
        .fa-regular {
            margin-left: -7.25pt;
        }
        &::marker,
        &::-webkit-details-marker {
            display: none;
        }
    }

    .top-level summary .h6 {
        padding-top: 0.15rem;
        padding-bottom: 0.15rem;
        margin-bottom: 0;
        a,
        span {
            padding-left: var(--sl-sidebar-item-margin-inline);
        }
    }
    .caret {
    }
    .hover-target {
        flex-shrink: 0;
        &:hover {
            color: var(--bs-success);
        }
    }
    [open] > summary .caret {
        transform: rotateZ(90deg);
    }

    a > *:not(:last-child),
    .group-label > *:not(:last-child) {
        margin-inline-end: 0.25em;
    }
</style>
