---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

const events: CollectionEntry<"events">[] = await getCollection("events");
type announcement = {
    title: string;
    start: Date;
    end: Date;
    text: string;
    slug: string;
};
const eventAnnouncements: announcement[] = events.reduce((acc, event) => {
    if (event.data.announcement?.text && event.data.announcement.start) {
        event.data.start = event.data.start ?? new Date(event.data.startDate + "T" + event.data.startTime);
        acc.push({
            title: event.data.title,
            start: event.data.announcement.start,
            end: event.data.announcement.end || event.data.start,
            text: event.data.announcement.text,
            slug: "events/" + event.id.replace(/\.[^/.]+$/, ""),
        });
    }
    return acc;
}, [] as announcement[]);

let blogPosts: CollectionEntry<"blog">[] = await getCollection("blog");
const blogPostAnnouncements: announcement[] = blogPosts.reduce((acc, post) => {
    if (post.data.announcement?.text && post.data.announcement?.start && post.data.announcement?.end) {
        acc.push({
            title: post.data.title,
            start: post.data.announcement.start,
            end: post.data.announcement.end,
            text: post.data.announcement.text,
            slug: `blog/${post.id.replace(/\.[^/.]+$/, "")}`,
        });
    }
    return acc;
}, [] as announcement[]);

const announcements = eventAnnouncements.concat(blogPostAnnouncements);
const now = new Date();
const currentAnnouncements = announcements.filter((announcement) => {
    return (announcement.start?.getTime() ?? 0) <= now.getTime() && (announcement.end?.getTime() ?? 0) >= now.getTime();
});
const sortedAnnouncements = currentAnnouncements.sort((a, b) => {
    // sort by distance to now, shortest first
    return Math.abs(now.getTime() - (a.start?.getTime() ?? 0)) - Math.abs(now.getTime() - (b.start?.getTime() ?? 0));
});

const nextAnnouncement = sortedAnnouncements[0];
---

{
    nextAnnouncement && (
        <div class="announcement d-flex justify-content-center text-bg-success">
            <div class="p-2 text-center ">
                <a class="text-white" href={nextAnnouncement.slug.replace(/\.[^/.]+$/, "")}>
                    {nextAnnouncement.text}
                </a>
            </div>
        </div>
    )
}
