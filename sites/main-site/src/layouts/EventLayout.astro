---
import EventListing from "@components/event/EventListing.svelte";
import PageLayout from "@layouts/PageLayout.astro";
import SidebarNav from "@components/sidebar/SidebarNav.astro";
import { type CollectionEntry } from "astro:content";
import type { SidebarEntry } from "@utils/types";

const { title, subtitle, events, currentFilters } = Astro.props;
export interface Props {
    title: string;
    subtitle: string;
    currentFilters: { name: string }[];
    events: CollectionEntry<"events">[];
}

events
    .map((event) => {
        if (event.data.title.toLowerCase().match("bytesize")) {
            event.data.type = "bytesize";
        }
        return event;
    })
    .sort((a, b) => {
        if (!a.data.start || !b.data.start) return 0;
        return a.data.start.getTime() - b.data.start.getTime();
    });

const searchEvents = (search) => {
    const searchTerms = search.toLowerCase().split(" ");
    return events.filter((event) => {
        const eventString = JSON.stringify(event.data).toLowerCase();
        return searchTerms.every((term) => eventString.includes(term));
    });
};

const filterEvents = (type) => {
    return events.filter((event) => event.data.type === type);
};

let currentEvents = events.filter((event) => {
    const today = new Date();
    if (!event.data.start || !event.data.end) return false;
    return event.data.start < today && event.data.end > today;
});

const years = [...new Set(events.map((event) => event.data.start.getFullYear()))].sort((a, b) => b - a);

const sections: SidebarEntry[] = years.map((year) => {
    return {
        type: "group",
        label: year.toString(),
        href: "#year-" + year,
        collapsed: true,
        entries: events
            .filter((event) => event.data.start?.getFullYear() === year)
            .map((event) => {
                return {
                    type: "link",
                    label: event.data.title,
                    href: "#event-" + event.id,
                    isCurrent: false,
                };
            }),
    };
});
---

<PageLayout
    title={title || "Events"}
    subtitle={subtitle || "Details of past and future events around nf-core."}
    viewTransitions={true}
>
    <div class="row">
        <div class="col-12 col-md-2 sticky-top-under d-none d-md-inline sidebar-left pt-1">
            <SidebarNav items={sections} />
        </div>

        <div class="col">
            <EventListing {events} {currentEvents} {currentFilters} client:load />
        </div>
    </div>
</PageLayout>
